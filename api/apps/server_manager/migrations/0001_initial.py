# Generated by Django 3.0.8 on 2020-08-03 10:03

import api.apps.core.stage
import api.apps.server_manager.validators
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_ip', models.GenericIPAddressField(verbose_name='Server ip to connections')),
                ('connection_port', models.IntegerField(default=22, verbose_name='Server connection port')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_server_manager.baseconnector_set+', to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='ServerConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modificated at')),
                ('server_name', models.CharField(default='JSjF4', max_length=16, verbose_name='Server name to show in client')),
                ('is_connected', models.BooleanField(default=False, verbose_name='Flag to show active servers')),
                ('server_settings', django.contrib.postgres.fields.jsonb.JSONField(default=api.apps.core.stage.get_default_server_settings, validators=[api.apps.server_manager.validators.validate_json_settings], verbose_name='JSON with settings for             SMTP(POSTFIX) and DNS(BIND) services')),
            ],
            options={
                'verbose_name': 'Servers config',
                'verbose_name_plural': 'Servers config',
                'db_table': 'server_config',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='KeySSHConnector',
            fields=[
                ('baseconnector_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server_manager.BaseConnector')),
                ('ssh_pubkey', models.TextField(verbose_name='SSH. Public RSA key connection to server')),
            ],
            options={
                'verbose_name': 'RSA key SSH connectors',
                'verbose_name_plural': 'RSA key SSH connectors',
                'db_table': 'key_ssh_connections',
            },
            bases=('server_manager.baseconnector',),
        ),
        migrations.CreateModel(
            name='SimpleSSHConnector',
            fields=[
                ('baseconnector_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server_manager.BaseConnector')),
                ('ssh_username', models.CharField(max_length=64, verbose_name='SSH. Username for connection to server')),
            ],
            options={
                'verbose_name': 'Simple SSH connectors',
                'verbose_name_plural': 'Simple SSH connectors',
                'db_table': 'simple_ssh_connections',
            },
            bases=('server_manager.baseconnector',),
        ),
        migrations.AddField(
            model_name='baseconnector',
            name='server_config',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connector', to='server_manager.ServerConfig', verbose_name='Ref to server config'),
        ),
    ]
